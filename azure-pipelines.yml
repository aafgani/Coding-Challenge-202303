# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: 
- main

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  webApiProjName : 'Api'
  webApiProjNameResolve : 'ContactApi'
  webAppProjName : 'Web'
  armTemplateFolder : 'template'

stages:
- stage : 'Build'
  displayName: 'Build The Application'
  jobs:
    - job: 'Build_Web_Api'
      displayName: 'Build Web Api'
      pool:
        vmImage: ubuntu-latest
      steps:
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: '6.x'
        - task: Assembly-Info-NetCore@3
          inputs:
            Path: '$(Build.SourcesDirectory)'
            FileNames: '*/$(webApiProjName).csproj'
            InsertAttributes: true
            FileEncoding: 'utf-8'
            WriteBOM: true
            InformationalVersion: '$(Build.BuildNumber)'
            LogLevel: 'verbose'
            FailOnWarning: false
            DisableTelemetry: false
        - task: DotNetCoreCLI@2
          displayName: 'Restore project dependencies'
          inputs:
            command: 'restore'
            projects: '**/$(webApiProjName).csproj'
        - task: DotNetCoreCLI@2
          displayName: 'Build the project - $(buildConfiguration)'
          inputs:
            command: 'build'
            projects: '**/$(webApiProjName).csproj'
            arguments: '--no-restore --configuration $(buildConfiguration)'
        - task : DotNetCoreCLI@2
          displayName: 'Publish the project - $(buildConfiguration)'
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '**/$(webApiProjName).csproj'
            arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(webApiProjName)/$(buildConfiguration)'
            zipAfterPublish: true
        - task : PublishBuildArtifacts@1
          displayName: 'Publish Artifact: drop'
          condition: succeeded()    
    - job: 'Build_Web_App'
      displayName: 'Build Web App'
      pool:
        vmImage: ubuntu-latest
      steps:
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: '6.x'
        - task: Assembly-Info-NetCore@3
          inputs:
            Path: '$(Build.SourcesDirectory)'
            FileNames: '*/$(webAppProjName).csproj'
            InsertAttributes: true
            FileEncoding: 'utf-8'
            WriteBOM: true
            InformationalVersion: '$(Build.BuildNumber)'
            LogLevel: 'verbose'
            FailOnWarning: false
            DisableTelemetry: false
        - task: DotNetCoreCLI@2
          displayName: 'Restore project dependencies'
          inputs:
            command: 'restore'
            projects: '**/$(webAppProjName).csproj'
        - task: DotNetCoreCLI@2
          displayName: 'Build the project - $(buildConfiguration)'
          inputs:
            command: 'build'
            projects: '**/$(webAppProjName).csproj'
            arguments: '--no-restore --configuration $(buildConfiguration)'
        - task : DotNetCoreCLI@2
          displayName: 'Publish the project - $(buildConfiguration)'
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '**/$(webAppProjName).csproj'
            arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(webAppProjName)/$(buildConfiguration)'
            zipAfterPublish: true
        - task : PublishBuildArtifacts@1
          displayName: 'Publish Artifact: drop'
          condition: succeeded()    
    - job: 'Copy_ARM_Template'
      displayName: 'Copy ARM Template'
      pool:
       vmImage: ubuntu-latest
      steps:
        - task : CopyFiles@2
          inputs:
            SourceFolder: '$(armTemplateFolder)/'
            Contents: 'azuredeploy*.json'
            TargetFolder: '$(Build.artifactStagingDirectory)/ARM'
        - task: PublishBuildArtifacts@1
          inputs:
           pathToPublish: $(Build.ArtifactStagingDirectory)
           publishLocation: 'Container'
- stage: 'Dev'
  displayName: 'Deploy to Dev'
  variables:
    - group: 'DEV'
  jobs: 
    - deployment: 
      pool:
        vmImage: 'ubuntu-latest'
      environment: 'Dev'
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: drop
              - task: replacetokens@5
                inputs:
                  rootDirectory: '$(Pipeline.Workspace)/drop/ARM'
                  targetFiles: 'azuredeploy.parameters.dev.json'
                  encoding: 'auto'
                  tokenPattern: 'custom'
                  tokenPrefix: '#'
                  tokenSuffix: '#'
                  writeBOM: true
                  actionOnMissing: 'warn'
                  keepToken: false
                  actionOnNoFiles: 'continue'
                  enableTransforms: false
                  enableRecursion: false
                  useLegacyPattern: false
                  enableTelemetry: true
              - task: AzureResourceManagerTemplateDeployment@3
                inputs:
                  deploymentScope: 'Resource Group'
                  azureResourceManagerConnection: 'Azure subscription 1(07dbce66-6476-4471-a7ce-a2ff48fe684b)'
                  subscriptionId: '07dbce66-6476-4471-a7ce-a2ff48fe684b'
                  action: 'Create Or Update Resource Group'
                  resourceGroupName: '$(arm_ResourceGroupName)'
                  location: 'Southeast Asia'
                  templateLocation: 'Linked artifact'
                  csmFile: '$(Pipeline.Workspace)/drop/ARM/azuredeploy.json'
                  csmParametersFile: '$(Pipeline.Workspace)/drop/ARM/azuredeploy.parameters.dev.json'
                  deploymentMode: 'Incremental'
              
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'Azure subscription 1(1)(07dbce66-6476-4471-a7ce-a2ff48fe684b)'
                  appType: 'webApp'
                  WebAppName: '$(arm_apiBaseName)'
                  packageForLinux: '$(Pipeline.Workspace)/drop/$(webApiProjName)/$(buildConfiguration)/$(webApiProjNameResolve).zip'
              - task: AzureRmWebAppDeployment@4
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'Azure subscription 1(1)(07dbce66-6476-4471-a7ce-a2ff48fe684b)'
                  appType: 'webApp'
                  WebAppName: '$(arm_webAppName)'
                  packageForLinux: '$(Pipeline.Workspace)/drop/$(webAppProjName)/$(buildConfiguration)/$(webAppProjName).zip'